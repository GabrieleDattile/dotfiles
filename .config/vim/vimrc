syntax on
syntax enable
filetype plugin indent on

let mapleader=" "
set encoding=utf8
set backspace=indent,eol,start
set noerrorbells
set tabstop=4
set softtabstop=4
set shiftwidth=4
set smartindent
set number relativenumber
set nowrap
set smartcase
set noswapfile
set nobackup
set incsearch
set clipboard=unnamed

call plug#begin('~/.vim/plugged')
Plug 'lervag/vimtex'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'pineapplegiant/spaceduck', { 'branch': 'main' }
Plug 'mbbill/undotree'
Plug 'vim-utils/vim-man'
Plug 'leafgarland/typescript-vim'
Plug 'ghifarit53/tokyonight-vim'
Plug 'tpope/vim-commentary'
Plug 'preservim/nerdtree' |
            \ Plug 'ryanoasis/vim-devicons'
call plug#end()

execute "set t_8f=\e[38;2;%lu;%lu;%lum"
execute "set t_8b=\e[48;2;%lu;%lu;%lum"
set termguicolors
let g:tokyonight_style = 'night'
let g:tokyonight_enable_italic = 1
colorscheme tokyonight

let g:airline_powerline_fonts = 1
let g:airline_theme = 'tokyonight'
let g:airline#extensions#tabline#enabled = 1

if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif

let g:airline_left_sep = '»'
let g:airline_left_sep = '▶'
let g:airline_right_sep = '«'
let g:airline_right_sep = '◀'
let g:airline_symbols.linenr = '␊'
let g:airline_symbols.linenr = '␤'
let g:airline_symbols.linenr = '¶'
let g:airline_symbols.branch = '⎇'
let g:airline_symbols.paste = 'ρ'
let g:airline_symbols.paste = 'Þ'
let g:airline_symbols.paste = '∥'

let g:airline_left_sep = ''
let g:airline_right_sep = ''
let g:airline_symbols.branch = ''
let g:airline_symbols.readonly = ''
let g:airline_symbols.linenr = ''

let g:airline#extensions#whitespace#enabled = 0

set laststatus=2
set noshowmode

nnoremap .cpp :-1read $HOME/.vim/.skeleton.cpp<CR>24jl
nnoremap .c :-1read $HOME/.vim/.skeleton.c<CR>9j4l

nnoremap <leader>u :UndotreeShow<CR>
nnoremap <leader>n :NERDTreeToggle<CR>
nnoremap <leader>w :tabclose<CR>
noremap <leader># :Commentary<CR>

inoremap " ""<left>
inoremap ' ''<left>
inoremap ( ()<left>
inoremap [ []<left>
inoremap { {}<left>
inoremap {<CR> {<CR>}<ESC>O
inoremap {;<CR> {<CR>};<ESC>O

noremap <C-J> <C-W><C-J>
noremap <C-K> <C-W><C-K>
noremap <C-L> <C-W><C-L>
noremap <C-H> <C-W><C-H>

tnoremap <C-J> <C-W><C-J>
tnoremap <C-K> <C-W><C-K>
tnoremap <C-L> <C-W><C-L>
tnoremap <C-H> <C-W><C-H>
tnoremap <C-b> <C-\><C-n>

vnoremap <C-y> "+y<cr>
map <C-p> "+p<cr>

function In()
    execute "below term++rows=10"
    execute "NERDTreeToggle"
    execute "wincmd l"
endfunction
command! In call In()

function BTerm()
    execute "below term++rows=10"
endfunction
command! BTerm call BTerm()

noremap <leader>t :BTerm<cr>
noremap <leader>i :In<cr>
